---
name: Limitador

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '5 4 * * *'

jobs:
  dump-github:
    name: Dump Github context
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo check --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 7
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: Swatinem/rust-cache@v2
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo test --all-features -vv

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo clippy --all-features --all-targets -- -D warnings

  kind:
    name: Try in kind (Kubernetes in Docker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          skipClusterCreation: true
      - run: |
          ./limitador-server/script/kind-setup.sh
          ips=$(kubectl get nodes -lkubernetes.io/hostname!=kind-control-plane -ojsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')
          port=$(kubectl -n default get service kuard -ojsonpath='{.spec.ports[?(@.name=="envoy-http")].nodePort}')
          curl "http://${ips[0]}:${port}"
