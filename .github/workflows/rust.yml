---
name: Limitador

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '5 4 * * *'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    services:
      infinispan:
        image: infinispan/server:11.0.9.Final
        ports:
          - 11222:11222
        env:
          USER: username
          PASS: password
    steps:
      - uses: actions/checkout@v4
      - uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo test --all-features -vv

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    needs: check
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo clippy --all-features --all-targets -- -D warnings

  bench:
    name: Bench
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: supercharge/redis-github-action@1.1.0
        with:
          redis-version: 5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: abelfodil/protoc-action@v1
        with:
          protoc-version: '3.19.4'
      - run: cargo bench

  wasm-build:
    name: Build for WASM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup target add wasm32-unknown-unknown
      - run: cargo build --target=wasm32-unknown-unknown --no-default-features --lib --manifest-path ./limitador/Cargo.toml

  kind:
    name: Try in kind (Kubernetes in Docker)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          skipClusterCreation: true
      - run: |
          ./limitador-server/script/kind-setup.sh
          ips=$(kubectl get nodes -lkubernetes.io/hostname!=kind-control-plane -ojsonpath='{.items[*].status.addresses[?(@.type=="InternalIP")].address}')
          port=$(kubectl -n default get service kuard -ojsonpath='{.spec.ports[?(@.name=="envoy-http")].nodePort}')
          curl "http://${ips[0]}:${port}"
