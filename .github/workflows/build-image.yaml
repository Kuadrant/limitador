---
name: Build Image

on:
  workflow_dispatch:
  push:
    branches: ['*']
    tags: ['*']

env:
  IMG_REGISTRY_HOST: quay.io
  IMG_REGISTRY_ORG: kuadrant
  MAIN_BRANCH_NAME: main

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
  build:
    name: Build
    # for regulars pushes, tags and not forks
    if: |
      (startsWith(github.ref, 'refs/tags/')) ||
      (!startsWith(github.ref, 'refs/tags/') &&
      github.event.repository.full_name == github.repository)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile
            platform: linux/amd64
            scope: build-amd
          - dockerfile: Dockerfile.aarch64
            platform: linux/arm64
            scope: build-arm
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_SHA=${{ github.sha }}
          cache-from: type=gha,scope=${{ matrix.scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.scope}}
          outputs: type=image,name=${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador,push-by-digest=true,name-canonical=true,push=true
          file: ${{ matrix.dockerfile }}
          platforms: |
            ${{ matrix.platform }}
          provenance: false
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  merge:
    runs-on: ubuntu-latest
    # for regulars pushes, tags and not forks
    if: |
      (startsWith(github.ref, 'refs/tags/')) ||
      (!startsWith(github.ref, 'refs/tags/') &&
      github.event.repository.full_name == github.repository)
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador
          tags: |
            # SHA tag for main branch
            type=raw,value=${{ github.sha }},enable=${{ github.ref_name == env.MAIN_BRANCH_NAME }}
            # set latest tag for main branch
            type=raw,value=latest,enable=${{ github.ref_name == env.MAIN_BRANCH_NAME }}
            # set ref name tag for non-main branches
            type=raw,value=${{ github.ref_name }},enable=${{ github.ref_name != env.MAIN_BRANCH_NAME }}
      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.IMG_REGISTRY_USERNAME }}
          password: ${{ secrets.IMG_REGISTRY_TOKEN }}
          registry: ${{ env.IMG_REGISTRY_HOST }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador:${{ steps.meta.outputs.version }}
      - name: Smoke Test
        run: |
          docker run --rm -t ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador:${{ steps.meta.outputs.version }} limitador-server --help
  build-from-forks:
    name: Build on forks
    # for forks
    if: |
      github.event.repository.full_name != github.repository)
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: limitador
          tags: ${{ github.sha }}
          dockerfiles: |
            ./Dockerfile
      - name: Smoke Test
        run: |
          docker run --rm -t limitador:${{ github.sha }} limitador-server --help
