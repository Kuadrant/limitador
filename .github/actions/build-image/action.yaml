name: 'Container Image Build'
description: 'Builds a container image for the project'
inputs:
  platforms:
    description: 'comma seperated list of platforms to build the image for'
    required: true
    default: 'linux/amd64'
runs:
  using: "composite"
  steps:

    - name: Set up QEMU for Multi-Arch Builds
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador
      tags: |
        # SHA tag for main branch
        type=raw,value=${{ github.sha }},enable=${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        # set latest tag for main branch
        type=raw,value=latest,enable=${{ github.ref_name == env.MAIN_BRANCH_NAME }}
        # set ref name tag for non-main branches
        type=raw,value=${{ github.ref_name }},enable=${{ github.ref_name != env.MAIN_BRANCH_NAME }}

    - name: Login to container registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.IMG_REGISTRY_USERNAME }}
        password: ${{ secrets.IMG_REGISTRY_TOKEN }}
        registry: ${{ env.IMG_REGISTRY_HOST }}

    - name: Build and Push
      id: build
      uses: docker/build-push-action@v5
      with:
        platforms: ${{ inputs.platforms }}
        push: true
        file: ./Dockerfile
        tags: |
          ${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador:${{ steps.meta.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          GITHUB_SHA=${{ github.sha }}

        context: .
        labels: ${{ steps.meta.outputs.labels }}
        outputs: type=image,name=${{ env.IMG_REGISTRY_HOST }}/${{ env.IMG_REGISTRY_ORG }}/limitador,push-by-digest=true,name-canonical=true,push=true
        provenance: false
